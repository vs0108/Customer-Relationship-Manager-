package cms;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;

public class CMS implements ActionListener {
    private JFrame frame;
    private JTextField nameField, emailField, contactField, addressField, companynameField;
    private JButton addButton, deleteButton;
    private JList<Customer> customerList;
    private DefaultListModel<Customer> listModel;
    private final List<Customer> customers;

    public CMS() {
        customers = new ArrayList<>();
        createWelcomeGUI();
    }

    private void createWelcomeGUI() {
    JFrame welcomeFrame = new JFrame("Customer Management System");
    welcomeFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    // Create the welcome panel
    JPanel welcomePanel = new JPanel(new BorderLayout());

    // Add the background image
    JLabel  background;
        background = new JLabel(new ImageIcon("F:/cus_ser.jpg"));
    welcomePanel.add(background, BorderLayout.CENTER);
    System.out.println(new File("F:\\Netbeans\\Lib\\CopyLibs\\CMS\\cus_ser").getAbsolutePath());


    // Add the welcome label and start button
    JLabel welcomeLabel;
        welcomeLabel = new JLabel("Welcome to Customer Management System!");
    welcomePanel.add(welcomeLabel, BorderLayout.NORTH);
    JButton startButton = new JButton("Start");
    startButton.addActionListener((ActionEvent e) -> {
        welcomeFrame.setVisible(false);
        createGUI();
    });
    welcomePanel.add(startButton, BorderLayout.SOUTH);

    welcomeFrame.getContentPane().add(welcomePanel);
    welcomeFrame.pack();
    welcomeFrame.setVisible(true);
}


    private void createGUI()
    {
        frame = new JFrame("Customer Management System");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        JPanel inputPanel = new JPanel(new GridLayout(6, 2));
        inputPanel.add(new JLabel("Name:"));
        nameField = new JTextField(20);
        inputPanel.add(nameField);
        inputPanel.add(new JLabel("Email:"));
        emailField = new JTextField(20);
        inputPanel.add(emailField);
        inputPanel.add(new JLabel("Contact:"));
        contactField = new JTextField(20);
        inputPanel.add(contactField);
        inputPanel.add(new JLabel("Address:"));
        addressField = new JTextField(20);
        inputPanel.add(addressField);
        inputPanel.add(new JLabel("Company Name:"));
        companynameField = new JTextField(20);
        inputPanel.add(companynameField);
        addButton = new JButton("Add");
        addButton.addActionListener(this);
        inputPanel.add(addButton);

        listModel = new DefaultListModel<>();
        for (Customer customer : customers)
        {
            listModel.addElement(customer);
        }
        customerList = new JList<>(listModel);
        customerList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        customerList.setSelectedIndex(-1);
        
        // Set the cell renderer for the customer list
    customerList.setCellRenderer(new DefaultListCellRenderer() {
        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            Customer customer = (Customer) value;
            setText(customer.toString().replace("\n", "\n"));
            setHorizontalAlignment(SwingConstants.LEFT);
            setVerticalAlignment(SwingConstants.TOP);
            setPreferredSize(new Dimension(0, 60));
            setBorder(BorderFactory.createEmptyBorder(6, 10, 5, 10));
            return this;
        }
    });
        
        JScrollPane listScrollPane = new JScrollPane(customerList);

        deleteButton = new JButton("Delete");
        deleteButton.addActionListener(this);
        JPanel outputPanel = new JPanel(new BorderLayout());
        outputPanel.add(listScrollPane, BorderLayout.CENTER);
        outputPanel.add(deleteButton, BorderLayout.SOUTH);
        
        frame.getContentPane().add(inputPanel, BorderLayout.NORTH);
        frame.getContentPane().add(outputPanel, BorderLayout.CENTER);

        frame.pack();
        frame.setVisible(true);
    }

    /**
     *
     * @param e
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == addButton) {
            String name = nameField.getText();
            String email = emailField.getText();
            String contact = contactField.getText();
            String address = addressField.getText();
            String companyname = companynameField.getText();
            Customer customer = new Customer(name, email, contact, address, companyname);
            customers.add(customer);
            listModel.addElement(customer);
            nameField.setText("");
            emailField.setText("");
            contactField.setText("");
            addressField.setText("");
            companynameField.setText("");
        } else if (e.getSource() == deleteButton) {
            int index = customerList.getSelectedIndex();
            if (index != -1) {
                Customer customer = customerList.getSelectedValue();
                customers.remove(customer);
                listModel.remove(index);
            }
        }
    }

    public static void main(String[] args) {
        new CMS();
    }

    

}

class Customer 
{
    private final String name;
    private final String email;
    private final String contact;
    private final String address;
    private final String companyname;

    public Customer(String name, String email, String contact, String address, String companyname) {
        this.name = name;
        this.email = email;
        this.contact = contact;
        this.address = address;
        this.companyname = companyname;
    }

    public String getName() {
        return name;
    }

    public String getEmail() {
        return email;
    }
    
    public String getContact() {
        return contact;
    }
    
    public String getAddress() {
        return address;
    }
    
    public String getcompanyname() {
        return companyname;
    }
    
    @Override
           public String toString() 
           {
        return String.format("Name: %s\nEmail: %s\nContact: %s\nAddress: %s\nCompany Name: %s",
                name, email, contact, address, companyname);
    }
}   